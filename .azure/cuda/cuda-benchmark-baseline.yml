schedules:
  - cron: "0 0 * * 6"
    displayName: Sat_5PM
    branches:
      include:
        - main

trigger: none

jobs:
  - job: "CUDA_Benchmarking_Baseline"
    timeoutInMinutes: 360

    pool:
      name: LinuxNVGPUPool
      demands:
        - Target.Model -equals NVIDIA_RTX_A6000

    steps:
      - bash: |
          sudo sysctl -w kernel.core_pattern="$(Build.SourcesDirectory)/build/core-%e-%s-%u-%g-%p-%t.dump"
          ulimit -c unlimited
          python -m pip install -U pip
          python -m pip install -r $(Build.SourcesDirectory)/requirements.txt
          python -m pip install -r $(Build.SourcesDirectory)/tools/benchmarkers/requirements.txt
          python -m pip install -U cmake
          echo "mkdir $HOME/.ccache"
          mkdir $HOME/.ccache
          echo "ln -s $HOME/.ccache $(System.DefaultWorkingDirectory)/ccache"
          ln -s $HOME/.ccache $(System.DefaultWorkingDirectory)/ccache
          conan remote add accera $(CONAN_REMOTE)
          conan user -p $(CONAN_PWD) -r accera $(CONAN_USERNAME)
        displayName: Install prereqs
        env:
          CONAN_PWD: $(CONAN_PWD)

      - bash: |
          git submodule init
          git submodule update
          ./external/vcpkg/bootstrap-vcpkg.sh
          ./external/vcpkg/vcpkg install catch2 tomlplusplus
        displayName: Update vcpkg dependencies
        workingDirectory: "$(Build.SourcesDirectory)"

      - bash: |
          python ./setup.py build
        displayName: Python build
        workingDirectory: "$(Build.SourcesDirectory)"

      - bash: |
          ninja -C $(Build.SourcesDirectory)/build/temp.linux-x86_64-3.8 cublas_gemm
        displayName: Cublas build
        workingDirectory: "$(Build.SourcesDirectory)"

      - bash: |
          export PYTHONPATH=$(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8
          python gpu_benchmark_tool.py --type h --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --cublas $(Build.SourcesDirectory)/build/temp.linux-x86_64-3.8/tools/benchmarkers/cublas/cublas_gemm --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv
          python gpu_benchmark_tool.py --type s --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --cublas $(Build.SourcesDirectory)/build/temp.linux-x86_64-3.8/tools/benchmarkers/cublas/cublas_gemm --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv gemm_resnet_inception.csv
        displayName: Run CUBLAS benchmarks
        workingDirectory: "$(Build.SourcesDirectory)/tools/benchmarkers"
        env:
          ACCOUNT_KEY: $(ACCOUNT_KEY)

      - bash: |
          git clone https://github.com/NVIDIA/cutlass.git
          cd cutlass && mkdir build && cd build
          export CUDACXX=`which nvcc`
          cmake .. -DCUTLASS_NVCC_ARCHS=86 -DCUTLASS_LIBRARY_KERNELS=all
          make cutlass_profiler -j
        displayName: CUTLASS build

      - bash: |
          export PYTHONPATH=$(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8
          python gpu_benchmark_tool.py --type h --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --cutlass $(System.DefaultWorkingDirectory)/cutlass/build/tools/profiler/cutlass_profiler --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv
          python gpu_benchmark_tool.py --type s --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --cutlass $(System.DefaultWorkingDirectory)/cutlass/build/tools/profiler/cutlass_profiler --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv gemm_resnet_inception.csv
        displayName: Run CUTLASS benchmarks
        workingDirectory: "$(Build.SourcesDirectory)/tools/benchmarkers"
        env:
          ACCOUNT_KEY: $(ACCOUNT_KEY)

      - bash: |
          rm -rf cutlass
        displayName: Cleanup CUTLASS build dir

      - bash: |
          export PYTHONPATH=$(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8
          python gpu_benchmark_tool.py --type h --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --pytorch CUDA --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv
          python gpu_benchmark_tool.py --type s --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --pytorch CUDA --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv gemm_resnet_inception.csv
          python gpu_benchmark_tool.py --type h --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --pytorch CUDA --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv --relu
          python gpu_benchmark_tool.py --type s --target 'NVidia RTX A6000' --branch $(Build.SourceBranch) --output $(Build.SourcesDirectory)/build/lib.linux-x86_64-3.8/accera_benchmarks/results --upload official_build_container_DO_NOT_UPLOAD_HERE --verbose --pytorch CUDA --input gemm_rectangle_A6000.csv gemm_square.csv gemm_bert_assorted.csv gemm_resnet_inception.csv --relu
        displayName: Run Pytorch benchmarks
        workingDirectory: "$(Build.SourcesDirectory)/tools/benchmarkers"
        env:
          ACCOUNT_KEY: $(ACCOUNT_KEY)
